[{"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\index.js":"1","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\App.js":"3","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js":"4","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\EventList.js":"5","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js":"6","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\api.js":"7","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\Event.js":"8","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\mock-data.js":"9","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\service-worker.js":"10","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js":"11"},{"size":841,"mtime":1642270182554,"results":"12","hashOfConfig":"13"},{"size":5201,"mtime":1642270182557,"results":"14","hashOfConfig":"13"},{"size":1633,"mtime":1642631800896,"results":"15","hashOfConfig":"13"},{"size":377,"mtime":1642270182556,"results":"16","hashOfConfig":"13"},{"size":393,"mtime":1642281921880,"results":"17","hashOfConfig":"13"},{"size":1460,"mtime":1642538189144,"results":"18","hashOfConfig":"13"},{"size":2804,"mtime":1642542229211,"results":"19","hashOfConfig":"13"},{"size":1333,"mtime":1642287309655,"results":"20","hashOfConfig":"13"},{"size":28876,"mtime":1642282824622,"results":"21","hashOfConfig":"13"},{"size":2909,"mtime":1642270182556,"results":"22","hashOfConfig":"13"},{"size":460,"mtime":1642709720471,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12apuz6",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\index.js",[],["50","51"],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\App.js",["52"],"import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents, extractLocations } from './api';\r\n\r\nimport './App.css';\r\nimport './nprogress.css';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = async (location, numberOfEvents) => {\r\n\t\tgetEvents().then(events => {\r\n\t\t\tconst locationEvents =\r\n\t\t\t\tlocation === 'all'\r\n\t\t\t\t\t? events\r\n\t\t\t\t\t: events.filter(event => event.location === location);\r\n\t\t\tif (this.mounted) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tevents: locationEvents.slice(0, this.state.numberOfEvents),\r\n\t\t\t\t\tcurrentLocation: location,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"app-container\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"App\">\r\n              <CitySearch \r\n                locations={this.state.locations}\r\n                updateEvents={this.updateEvents} />\r\n              <EventList \r\n                events={this.state.events}\r\n                numberOfEvents={this.state.numberOfEvents} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\EventList.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\api.js",["53","54"],"import { mockData } from './mock-data'; \r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n}; \r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://sggwog2ltd.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://sggwog2ltd.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://sggwog2ltd.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n\r\n};","C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\Event.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\mock-data.js",[],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\service-worker.js",[],["55","56"],"C:\\Users\\lance\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":39,"column":76,"nodeType":"67","messageId":"68","endLine":39,"endColumn":77},{"ruleId":"65","severity":1,"message":"66","line":63,"column":93,"nodeType":"67","messageId":"68","endLine":63,"endColumn":94},{"ruleId":"57","replacedBy":"69"},{"ruleId":"59","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'NumberOfEvents' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["71"],["72"],"no-global-assign","no-unsafe-negation"]